#!/bin/bash

if [ "$(which python)" = "" ];
then 
   echo "Please install python!"
   exit 1
fi

DEBUG=0

for i in $@;
do
	if [ "$i" == '--debug' ]; then DEBUG=1; fi
done

OLDPWD=$( pwd )
CDIR=$( dirname "${BASH_SOURCE[0]}" )
CDIR_TMP="${CDIR}/docker/tmp"
CDIR_CNF="${CDIR}/docker/config"

function help_txt() {
echo "Script for running laravel container 

laradock start 	            - Build image and run container 
laradock remove             - Remove image and container 
laradock stop	            - Stop container 
laradock login              - Login to container

laradock config             - List config options
laradock config <name>      - Edit config
"
}

function _dbg() {
	if [ "$DEBUG" = "1" ];
	then
		echo "[ $(date) ] $1"
	fi
}

_dbg "OLDPWD=$OLDPWD"
_dbg "CDIR=$CDIR"
_dbg "CDIR_TMP=$CDIR_TMP"
_dbg "CDIR_CNF=$CDIR_CNF"

function onstart() {
	if [ $1 -eq 0 ];
	then 
		_dbg "docker exec laradock /opt/add/onstart.sh;"
		docker exec laradock /opt/add/onstart.sh;
	fi;
}

function _stop() {
	_dbg "docker container stop laradock"
	docker container stop laradock
}

function _start() {

     local _restart=0

     if [ ! -f "${CDIR_TMP}/compose.yml" ];
     then 
	_dbg "python \"${CDIR}/docker/run/run.py\" -tpl \"${CDIR}/docker/templates/compose.tpl\" -p \"${CDIR_CNF}/ports\" -v \"${CDIR_CNF}/volumes\" -l \"${CDIR}\" > \"${CDIR_TMP}/compose.yml\""
	python "${CDIR}/docker/run/run.py" -tpl "${CDIR}/docker/templates/compose.tpl" -p "${CDIR_CNF}/ports" -v "${CDIR_CNF}/volumes" -l "${CDIR}" > "${CDIR_TMP}/compose.yml"
	local _restart=1
     fi

     _dbg "docker-compose -f \"${CDIR_TMP}/compose.yml\" up -d laradock "    
     docker-compose -f "${CDIR_TMP}/compose.yml" up -d laradock 
     onstart $?

     if [ "$_restart" = "1" ];
     then 
	_stop
	_start
     fi

}

function _remove() {
	if [ -f "${CDIR_TMP}/compose.yml" ];
	then 
		_dbg "rm \"${CDIR_TMP}/compose.yml\""
		rm "${CDIR_TMP}/compose.yml"
	fi
	
	_dbg "docker container stop laradock"
	_dbg "docker rm laradock"
	_dbg "docker rmi laradock"

	docker container stop laradock
	docker rm laradock
	docker rmi laradock

	if [ -d "${CDIR}/app" ];
	then
		echo "Remove ${CDIR}/app? y/n"
		read rcdir
		if [ "${rcdir}" = "y" ];
		then 
			_dbg "rm -rf \"${CDIR}/app\""
			rm -rf "${CDIR}/app"
		fi
	fi
}

function _login() {
	_dbg "docker exec -it laradock /bin/bash"
	docker exec -it laradock /bin/bash
}


CMD=$1

_dbg "CMD=$CMD"

if [ "$CMD" = "start" ];
then
	_start
elif [ "$CMD" = "remove" ];
then 
	_remove
elif [ "$CMD" = "stop" ];
then 
	_stop
elif [ "$CMD" = "login" ];
then
	_login
elif [ "$CMD" = "config" ];
then
	if [ ! "$2" = "" ];
	then
		if [ ! -f "${CDIR_CNF}/$2" ];
		then 
			echo "Config not found"
		else
			nano "${CDIR_CNF}/$2"	
		fi
	else
		for conf in $(ls "${CDIR_CNF}");
		do 
			echo "  - ${conf}"
		done
	fi;
else
	_dbg "Show help text"
	help_txt
fi;

